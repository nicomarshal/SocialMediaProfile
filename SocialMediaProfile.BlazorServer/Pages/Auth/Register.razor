@page "/register";
@inject IAuthWebService AuthWebService;
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager;

<section class="d-flex justify-content-center align-items-center" style="height: 100vh;">
    <EditForm Model="_registerDTO" OnValidSubmit="SubmitRegister">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="_registerDTO.Name" />
            <ValidationMessage For="() => _registerDTO.Name"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="surname">Surname</label>
            <InputText id="surname" class="form-control" @bind-Value="_registerDTO.Surname" />
            <ValidationMessage For="() => _registerDTO.Username"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="profession">Profession</label>
            <InputText id="profession" class="form-control" @bind-Value="_registerDTO.Profession" />
            <ValidationMessage For="() => _registerDTO.Profession"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" class="form-control" @bind-Value="_registerDTO.Username" />
            <ValidationMessage For="() => _registerDTO.Username"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="password">Contraseña</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="_registerDTO.Password" />
            <ValidationMessage For="() => _registerDTO.Password"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="_registerDTO.Email" />
            <ValidationMessage For="() => _registerDTO.Email"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="alias">Alias</label>
            <InputText id="alias" class="form-control" @bind-Value="_registerDTO.Alias" />
            <ValidationMessage For="() => _registerDTO.Alias"></ValidationMessage>
        </div>
        <button type="submit" class="btn btn-primary">Register</button>
    </EditForm>
</section>

@code {
    private RegisterDTO _registerDTO = new RegisterDTO();

    private async Task SubmitRegister()
    {
        try
        {
            var result = await AuthWebService.RegisterAsync(_registerDTO);

            if (!result.IsRegistered)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"{result.StatusCode} - El usuario no pudo ser registrado.");
                return;
            }

            await JSRuntime.InvokeVoidAsync("alert", $"{result.StatusCode} - Registro de usuario exitoso.");
            NavigationManager.NavigateTo("/", true);
        }
        catch (Exception e)
        {
            throw new Exception(e.Message);
        }
    }
}
