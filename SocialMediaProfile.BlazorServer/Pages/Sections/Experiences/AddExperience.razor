@using SocialMediaProfile.BlazorServer.Data.Interfaces;
@using SocialMediaProfile.Core.Models.DTOs;
@using System.Net.Http.Headers;
@inject IExperienceWebService ExperienceWebService;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime;

<EditForm Model="_experienceDTO" OnValidSubmit="() => CreateExperience(_experienceDTO)">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <section class="modal fade" id="addExperience" tabindex="-1" aria-labelledby="addExperienceLabel" aria-hidden="true">
        <article class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark text-white">
                <div class="modal-header" data-bs-theme="dark">
                    <h1 class="modal-title fs-5" id="addExperienceLabel">Agregar Experiencia</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="companyName">Company</label>
                        <InputText id="companyName" class="form-control" @bind-Value="_experienceDTO.Name" />
                        <ValidationMessage For="() => _experienceDTO.Name"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label for="job">Job</label>
                        <InputText id="job" class="form-control" @bind-Value="_experienceDTO.Job" />
                        <ValidationMessage For="() => _experienceDTO.Job"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label for="startDate">Start Date</label>
                        <InputDate id="startDate" class="form-control" @bind-Value="_experienceDTO.StartDate" />
                        <ValidationMessage For="() => _experienceDTO.StartDate"></ValidationMessage>
                        
                        <label for="finshDate">Finish Date</label>
                        <InputDate id="finshDate" class="form-control" @bind-Value="_experienceDTO.FinishDate" />
                    </div>
                    <div class="form-group">
                        <label for="description">Description</label>
                        <InputTextArea id="description" class="form-control" @bind-Value="_experienceDTO.Description" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Agregar</button>
                </div>
            </div>
        </article>
    </section>
</EditForm>

@code {
    private ExperienceDTO _experienceDTO = new ExperienceDTO();

    private async Task CreateExperience(ExperienceDTO experienceDTO)
    {
        var result = await ExperienceWebService.AddAsync(experienceDTO);

        if (!result.IsCreated)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"{result.StatusCode} - La experiencia laboral no pudo ser cargada.");
            return;
        }

        await JSRuntime.InvokeVoidAsync("alert", $"{result.StatusCode} - La experiencia laboral fue cargada con éxito.");

        NavigationManager.NavigateTo("/", true);
    }
}