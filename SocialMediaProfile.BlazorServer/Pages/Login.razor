@page "/login";
@using Blazored.LocalStorage;
@using Newtonsoft.Json;
@using SocialMediaProfile.BlazorServer.Data.Interfaces;
@using SocialMediaProfile.Core.Models.DTOs;
@using System.Text;
@inject IAuthWebService AuthService;
@inject NavigationManager NavigationManager;

<section class="d-flex justify-content-center align-items-center" style="height: 100vh;">
    <EditForm Model="_loginDTO" OnValidSubmit="SubmitLogin">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="_loginDTO.Email" />
            <ValidationMessage For="() => _loginDTO.Email"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="password">Contraseña</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="_loginDTO.Password" />
            <ValidationMessage For="() => _loginDTO.Password"></ValidationMessage>
        </div>
        <button type="submit" class="btn btn-primary">Login</button>
    </EditForm>
</section>

@code {
    private LoginDTO _loginDTO = new LoginDTO();
    private bool _isLoggedIn = false;

    [Parameter]
    public EventCallback<bool> LoginChange { get; set; }

    private async Task SubmitLogin()
    {
        try
        {
            _isLoggedIn = await AuthService.LoginAsync(_loginDTO);

            if (_isLoggedIn)
            {
                await LoginChange.InvokeAsync(_isLoggedIn);
                //NavigationManager.NavigateTo("/", true);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }

}