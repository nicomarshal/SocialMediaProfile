// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialMediaProfile.DataAccess;

#nullable disable

namespace SocialMediaProfile.DataAccess.Migrations
{
    [DbContext(typeof(SocialMediaDbContext))]
    partial class SocialMediaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Career")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Career = "Licenciatura en Matemática",
                            Description = "Carrera universitaria de 5 años",
                            FinishDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4032),
                            IsDeleted = false,
                            Logo = "imgEducGian",
                            Name = "FAMAF - UNC",
                            PersonId = 1,
                            StartDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4031)
                        },
                        new
                        {
                            Id = 2,
                            Career = "Ingenierìa en Computaciòn",
                            Description = "Carrera universitaria de 5 años",
                            FinishDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4034),
                            IsDeleted = false,
                            Logo = "imgEducNico",
                            Name = "FCEFyN - UNC",
                            PersonId = 2,
                            StartDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4034)
                        });
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Centro de investigaciòn nacional",
                            FinishDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4020),
                            IsDeleted = false,
                            Job = "Cientìfico",
                            Logo = "imgExpGian",
                            Name = "CONICET",
                            StartDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4005),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Automatizaciones industriales",
                            FinishDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4022),
                            IsDeleted = false,
                            Job = "Desarrollador .NET",
                            Logo = "imgExpNico",
                            Name = "eFALCOM",
                            StartDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4021),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AboutMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutMe = "Simpàtico y curioso",
                            IsDeleted = false,
                            Name = "Gian",
                            Profession = "Matemàtico",
                            ProfileImg = "imgGian",
                            Surname = "Ledesma",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AboutMe = "Mùsico y curioso",
                            IsDeleted = false,
                            Name = "Nicolàs",
                            Profession = "Desarrollador",
                            ProfileImg = "imgNico",
                            Surname = "Ledesma",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Robot construido con bloques",
                            FinishDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4055),
                            Images = "ImagesGian",
                            IsDeleted = false,
                            Name = "Robot 3D",
                            PersonId = 1,
                            StartDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4054),
                            URL = "https://"
                        },
                        new
                        {
                            Id = 2,
                            Description = "App de mensajerìa",
                            FinishDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4057),
                            Images = "ImagesNico",
                            IsDeleted = false,
                            Name = "ChatApp",
                            PersonId = 2,
                            StartDate = new DateTime(2023, 10, 16, 19, 7, 27, 417, DateTimeKind.Local).AddTicks(4056),
                            URL = "https://"
                        });
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Usuario Administrador",
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Usuario Regular",
                            IsDeleted = false,
                            Name = "Regular"
                        });
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "imgSKGian",
                            Percentage = 95,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "imgSkNico",
                            Percentage = 95,
                            PersonId = 2
                        });
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "gianledesma@gmail.com",
                            IsDeleted = false,
                            Password = "gian123",
                            RoleId = 1,
                            Username = "Gian123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "nicoledesma@gmail.com",
                            IsDeleted = false,
                            Password = "nico123",
                            RoleId = 2,
                            Username = "Nico123"
                        });
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Education", b =>
                {
                    b.HasOne("SocialMediaProfile.DataAccess.Entities.Person", "Person")
                        .WithMany("Educations")
                        .HasForeignKey("PersonId")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Experience", b =>
                {
                    b.HasOne("SocialMediaProfile.DataAccess.Entities.User", "User")
                        .WithMany("Experiencies")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Person", b =>
                {
                    b.HasOne("SocialMediaProfile.DataAccess.Entities.User", "User")
                        .WithOne("Person")
                        .HasForeignKey("SocialMediaProfile.DataAccess.Entities.Person", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Project", b =>
                {
                    b.HasOne("SocialMediaProfile.DataAccess.Entities.Person", "Person")
                        .WithMany("Projects")
                        .HasForeignKey("PersonId")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Skill", b =>
                {
                    b.HasOne("SocialMediaProfile.DataAccess.Entities.Person", "Person")
                        .WithMany("Skills")
                        .HasForeignKey("PersonId")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.User", b =>
                {
                    b.HasOne("SocialMediaProfile.DataAccess.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Person", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Projects");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SocialMediaProfile.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Experiencies");

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
